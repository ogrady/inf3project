package util;

import java.util.ArrayList;
import java.util.List;

import tokenizer.ITokenizable;
/**
 * Challenges are generated to challenge a player to a certain minigame (implicated by {@link #accepted} == false) or to accept the challenge of another player ({@link #accepted} == true).<br>
 * They are automatically generated by the {@link ArenaFactory}. 
 * @author Daniel
 *
 */
public class Challenge implements ITokenizable {
	private int challengerId;
	private String type;
	private boolean accepted;
	
	public boolean isAccepted() { return accepted; }
	public int getChallengerId() { return challengerId; }
	public String getType() { return type; }

	/**
	 * Constructor
	 * @param _challengerId id of the challenging player
	 * @param _type type (dragon,staghunt,skirmish)
	 * @param _accepted whether it was an initial challenge (false) or accepting the challenge (true)
	 */
	public Challenge(int _challengerId, String _type, boolean _accepted) {
		challengerId = _challengerId;
		type = _type;
		accepted = _accepted;
	}
	
	/**
	 * begin:chal
	 * id:NR
	 * type:STRING
	 * accepted:BOOLEAN
	 * end:chal
	 */
	@Override
	public List<String> tokenize() {
		ArrayList<String> tokens = new ArrayList<String>();
		tokens.add(Const.PAR_BEGIN + Const.PAR_CHALLENGE);
		tokens.add(Const.PAR_ID + challengerId);
		tokens.add(Const.PAR_TYPE + type);
		tokens.add(Const.PAR_ACCEPTED + accepted);
		tokens.add(Const.PAR_END + Const.PAR_CHALLENGE);
		return tokens;
	}
}